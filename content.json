{"pages":[{"title":"About","text":"","link":"/about/index.html"},{"title":"categories","text":"","link":"/categories/index.html"},{"title":"Tags","text":"","link":"/tags/index.html"}],"posts":[{"title":"졸업 작품: 8llow Beam","text":"Team Member김희중(SW) 정민국(Android App) 박상진(Moter&amp;Video) 김현준(HW)Development Period2016.10 ~ 12Schematic Diagram About the project &amp; Goal 전단지 - 간판 - TV 광고 - LED 광고 등은 우리가 길을 지나가면서 혹은 쉬면서, 이동하면서 접하는 광고 매체들이다. 우리 팀은 이러한 광고들의 정보 전달 방식이 일방적이 라는 것에서 시작하여 대중과 함께 할 수 있는 인터렉티브한 제품을 만드는 것을 목표로 삼았다. 더 나아가, 제품의 동작 방식을 다양화 시켜, 사용자의 광고 아이디어를 담을 수 있는 ‘광고 모듈’을 제공하였다. 위 그림에서 보이는 바와 같이, 사람의 모션을 Background subtraction 기술로 인식하고 사람의 위치 정보를 계산하여, 빔 프로젝터를 회전 시킨다. My Role 빔 프로젝터를 2축 모션을 통해 회전시키고, 부품들을 담을 수 있는 HW 총괄을 맡았다. 고려 사항 빔프로젝터를 고정시켜야 하나, 탈 부착이 가능해야 한다. (셀카봉 디자인 차용) Z 축을 고정 하는 것 (베어링 고정틀 사용 - 자전거 핸들 디자인 차용) 3D Printer의 한계로 인해, 면을 좋게 하기 위해 뽑는 모양이 제한 됨 본체 삼단 분리 디자인 포맥스 사용 ###ReferenceBackground subtraction","link":"/2018/01/17/8llow Beam/"},{"title":"RESUME","text":"","link":"/2018/01/18/resume/"},{"title":"Line Tracing Jansen Mechanism","text":"라인 트레이싱 유튜브 영상Team Member[수염난 피터팬] 김현준 이수홍Special thanks 김영수, 차혜민, 공현배, 강남규, 김승하Development Period2017.2 ~ 3Using Device아두이노, 적외선 센서, DC 모터, 과학상자 기어 및 축, 3D 프린터(신도 DP200)Schematic Diagram About the project &amp; Goal 여러개의 적외선 센서 조합을 이용하여 Jansen이 검은색 선을 따라갈 수 있도록 한다. HW design다리 길이의 비율은, 참조[1]의 다리 길이 비율을 차용하였고, 30*30*30cm의 경진 대회 규격을 고려하여 최대한 길게 길이를 정했습니다. 보행중에 다리의 흔들림을 줄이기 위해서 축의 흔들림으로 인한 내부 마찰을 줄이기 위해서 위와 같은 목적으로 Joint에서의 디자인은 사용, 와셔와 볼트로 두 linkage 고정동력 전달부에서, 기구의 강도가 가장 약해짐이를 해결하기 위해, 알맞은 공차 설계로 동력 전달 중 흔들림으로 인한 파워 로스를 줄여줌 무게 중심을 낮추기 위해, 부품 중 가장 무거운 모터의 위치를 아래로 내릴 수 있도록 바디를 설계 하였다. Algorithm123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106// 센서int left2 = A2;int left1 = A3;int right1 = A4;int right2 = A5;int l2 = 0;int l1 = 0;int r1 = 0;int r2 = 0;//모드int mode=0;int r = 1;int straight=255;int rotateH=255;int rotateL=180;void setup() &#123; pinMode(left2,INPUT); pinMode(left1,INPUT); pinMode(right1,INPUT); pinMode(right2,INPUT); pinMode(4, OUTPUT); // 방향 HIGH, LOW +,- pinMode(5, OUTPUT); // PWM pinMode(6, OUTPUT); // PWM pinMode(7, OUTPUT); // 방향 HIGH, LOW +,- Serial.begin(9600);&#125;void loop() &#123; // put your main code here, to run repeatedly l2 = analogRead(left2);// leftstate값 확인필요!, 흰색 = 750, 검은색 = 0 l1 = analogRead(left1); //rightstate 확인필요!, 흰색 = 750, 검은색 = 0 r1 = analogRead(right1); r2 = analogRead(right2); Serial.print(l2); Serial.print(\"/\"); Serial.print(l1); Serial.print(\"/\"); Serial.print(r1); Serial.print(\"/\"); Serial.print(r2); Serial.print(\"/\"); Serial.println(mode); r = r + 1; if(r&gt;10)&#123; r = 1; &#125; mode_selector(); switch(mode)&#123; case 0: digitalWrite(4,0); analogWrite(5,straight); analogWrite(6,straight); digitalWrite(7,0); break; case -1: digitalWrite(4,0); // 좌회전 analogWrite(5,rotateL); analogWrite(6,rotateH); digitalWrite(7,0); break; case -2: digitalWrite(4,0); // 좌강회전 analogWrite(5,0); analogWrite(6,rotateH); digitalWrite(7,0); break; case 1: digitalWrite(4,0); // 우회전 analogWrite(5,rotateH); analogWrite(6,rotateL); digitalWrite(7,0); break; case 2: digitalWrite(4,0); // 우강회전 analogWrite(5,rotateH); analogWrite(6,0); digitalWrite(7,0); break; case 5: digitalWrite(4,0); // 정지 analogWrite(5,0); analogWrite(6,0); digitalWrite(7,0); break; case -5: digitalWrite(4,1); // 후진 analogWrite(5,180); analogWrite(6,180); digitalWrite(7,1); break; &#125; delay(10);&#125;void mode_selector()&#123; if(l2&gt;200 &amp;&amp; r2&gt;200)&#123; mode=0; //0**0 직진 if(l1&gt;200 &amp;&amp; r1&gt;200)&#123; mode=-5; //0000 후진 &#125; if(l1&lt;200 &amp;&amp; r1 &gt;200)&#123;mode=-1;&#125; //0100 좌 if(r1&lt;200 &amp;&amp; l1 &gt;200)&#123;mode=1;&#125; //0010 우 &#125; if(l2&lt;200)&#123;mode=-2;&#125; //1000 좌강 if(r2&lt;200)&#123;mode=2;&#125; //0001 우강 if(l2&lt;200 &amp;&amp; r2&lt;200)&#123;pow(-1,r);&#125; //좌우 흔들어 줘서, 계속 앞 뒤로 움직이며 정체 된 것을 해결해 줌&#125; Awarded Thanks to경진 대회 참가 할 수 있는 기회를 주신 이수홍 교수님기본 적인 얀센 구조를 알려주고, 연구실 팀의 작품 완성을 위해 헌신해준 영수마지막날 까지 같이 작업하며, 센서 배치 구조, 알고리즘 등 많은 도움을 준 혜민,현배그리고 경진대회로 고생 많이 한 남규 승하 형 감사합니다. Reference[1] JIN YONGZHU, 지형근. (2016). 얀센 메커니즘을 이용한 보행 로봇의 최적설계에 관한 연구. 한국CDE학회지, 22(2), 18-22. 2. 트레이싱 알고리즘[2] m.sketch 프로그램 - 2D mechanism modeling[3] 에디슨 홈페이지","link":"/2018/01/19/Line-Tracing-Jansen-Mechanism/"},{"title":"Sites storage [2018-01-19 16:01:08]","text":"Mark down markdown으로 레포트 쓰기 마크다운 문법 설명 및 hexo 문법테스트 Typora 사용법 Hexo Hexo Start Guaidhexo –deploy 적용 부분에서,1$ npm install hexo-deployer-git --save Git 서버 배포 플러그인 해줘야함 Color scripter [$ npm install hexo-generator-category –save] 이거 깔면 node_modules로 들어옴 윈도우 윈도우10 탐색기 응답없음 공유기로 컴퓨터 만들기 구직 사이트 원티드 로켓 펀치 데모 데이 잡 플래닛 유료 이력서 검토 사이트 HTML CSS 블로그 글 접기 펴기 openCV-python","link":"/2018/01/19/site/"},{"title":"Key words [2018-01-19 16:02:08]","text":"맨몸 운동 이퀼라이저 딥바 어떻게든 되겠지근데 가서 진짜 열심히 할꺼야신나고 재밌고 즐겁게 브런치스타트업 이력서에 대한 충고1.이력서 쓸 때, “스타트업에서 주도적으로 일하며 내가 만든 서비스가 직접 유저들에게 사용되는 걸 보고 싶다.”이건 스타트업에서 얻을 수 있는 장접이지, 지원하는 회사에 대한 이야기가 아니다.지원자를 ‘스타트업에 가고 싶은 사람’으로 볼 뿐 ‘우리 회사에 오고 싶어 하는 사람’으로 보진 않습니다. 자신이 만든 ‘서비스’보단 ‘기술’에 더 집중하세요 함께 성장한다. 회사와 함께 성장한다. 취업을 위해 무언가를 하나 더 배운다기 보단 스스로를 잘 분석하고 자신이 이미 가지고 있는 것들을 점검해 보면자신이 어떤 장점을 가지고 있는지 알게 됩니다.이런 장점들을 이력서에 적어놓고, 다듬고 적어놓고 다듬고 하다 보면, 문장/ 포트폴리오 하나하나에 들어간 나의 고민은 절대 퇴색하지 않습니다. 오픽!@#1 뉴스킨 아이디3617452 Header 1 Header 2 Content 1 Content 3 Content 2 Content 4","link":"/2018/01/19/keyword/"},{"title":"Control Jansen with alexa","text":"알렉사 얀센 연동 동영상Team member김영수, 김현준Development period2017.4 - 5Using deviceAlexa echo dot, jansen, L239D motor driver, esp8266Schematic diagram About the project SW setup link aduino library 설치 아래 있는거 다 설치했더니 됬다 ESPAsyncTCP-master.zipESPAsyncUDP-master.zipESPAsyncWebServer-master.zipfauxmo-master.zipxoseperez-fauxmoesp-fdf5ffd6793d.zipAdafruit_CC3000_Library-master.zipCDM v2.12.06 WHQL Certified.zip 회로 구성L239D circuit 설명 링크 code123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134#include &lt;Arduino.h&gt;#include &lt;ESP8266WiFi.h&gt;#include \"fauxmoESP.h\"#define WIFI_SSID \"KBDLAB1\"#define WIFI_PASS \"kbdlabwifi2@\"#define SERIAL_BAUDRATE 115200 fauxmoESP fauxmo; // -----------------------------------------------------------------------------// Wifi// -----------------------------------------------------------------------------#define Driver1 5 // D1#define Driver2 4 // D2#define Driver3 0 // D3#define Driver4 2 // D4 void wifiSetup() &#123; // Set WIFI module to STA mode WiFi.mode(WIFI_STA); // Connect Serial.printf(\"[WIFI] Connecting to %s \", WIFI_SSID); WiFi.begin(WIFI_SSID, WIFI_PASS); // Wait while (WiFi.status() != WL_CONNECTED) &#123; Serial.print(\".\"); delay(100); &#125; Serial.println(); // Connected! Serial.printf(\"[WIFI] STATION Mode, SSID: %s, IP address: %s\\n\", WiFi.SSID().c_str(), WiFi.localIP().toString().c_str());&#125; void callback(uint8_t device_id, const char * device_name, bool state) &#123; Serial.printf(\"[MAIN] %s state: %s\\n\", device_name, state ? \"ON\" : \"OFF\"); if ( (strcmp(device_name, \"left\") == 0) ) &#123; // this just sets a variable that the main loop() does something about if (state) &#123; digitalWrite(Driver3, HIGH); digitalWrite(Driver4, LOW); &#125; else &#123; digitalWrite(Driver1, LOW); digitalWrite(Driver2, LOW); digitalWrite(Driver3, LOW); digitalWrite(Driver4, LOW); &#125; &#125; if ( (strcmp(device_name, \"going\") == 0) ) &#123; // this just sets a variable that the main loop() does something about if (state) &#123; digitalWrite(Driver1, HIGH); digitalWrite(Driver2, LOW); digitalWrite(Driver3, HIGH); digitalWrite(Driver4, LOW); &#125; else &#123; digitalWrite(Driver1, LOW); digitalWrite(Driver2, LOW); digitalWrite(Driver3, LOW); digitalWrite(Driver4, LOW); &#125; &#125; if ( (strcmp(device_name, \"backing\") == 0) ) &#123; // this just sets a variable that the main loop() does something about if (state) &#123; digitalWrite(Driver1, LOW); digitalWrite(Driver2, HIGH); digitalWrite(Driver3, LOW); digitalWrite(Driver4, HIGH); &#125; else &#123; digitalWrite(Driver1, LOW); digitalWrite(Driver2, LOW); digitalWrite(Driver3, LOW); digitalWrite(Driver4, LOW); &#125; &#125; if ( (strcmp(device_name, \"spinning\") == 0) ) &#123; // this just sets a variable that the main loop() does something about if (state) &#123; digitalWrite(Driver1, HIGH); digitalWrite(Driver2, LOW); digitalWrite(Driver3, LOW); digitalWrite(Driver4, HIGH); &#125; else &#123; digitalWrite(Driver1, LOW); digitalWrite(Driver2, LOW); digitalWrite(Driver3, LOW); digitalWrite(Driver4, LOW); &#125; &#125;&#125; void setup() &#123; // Init serial port and clean garbage Serial.begin(SERIAL_BAUDRATE); Serial.println(\"FauxMo demo sketch\"); Serial.println(\"After connection, ask Alexa/Echo to 'turn &lt;devicename&gt; on' or 'off'\"); pinMode(Driver1, OUTPUT); pinMode(Driver2, OUTPUT); pinMode(Driver3, OUTPUT); pinMode(Driver4, OUTPUT); // Wifi wifiSetup(); // Fauxmo fauxmo.addDevice(\"going\"); fauxmo.addDevice(\"backing\"); fauxmo.addDevice(\"left\"); fauxmo.addDevice(\"spinning\"); fauxmo.onMessage(callback);&#125; void loop() &#123; fauxmo.handle();&#125; 코드에서1fauxmo.addDevice(\"going\"); 를 통해 알렉사 장치에 device를 추가해 주고,callback 함수를 통해 해당 디바이스를 on/off 제어 한다. Thanks to영수~~ Reference[1]알렉사 esp8266 SW setup adafruit 홈페이지[2]아마존 알렉사","link":"/2018/01/21/Control-Jansen-with-alexa/"},{"title":"V-rep converter","text":"Team members김영수, 김현준Development period5개월Schematic diagram About the project알고리즘using System;using System.Collections.Generic;using System.ComponentModel;using System.Data;using System.Drawing;using System.IO;using System.Diagnostics;using System.Linq;using System.Text;using System.Windows;using System.Windows.Input;using System.Windows.Media;using System.Windows.Media.Media3D;using System.Collections;using System.Threading.Tasks;using System.Windows.Forms;using System.Windows.Forms.DataVisualization.Charting;namespace V_REP_CONVERTER&#123; public partial class Form1 : Form &#123; int legs = 0; bool Enalbe_3d_button = false; List&lt;double[]&gt; points = new List&lt;double[]&gt;(); string path = System.Windows.Forms.Application.StartupPath; Get_Point getP = new Get_Point(); Cal_Method cal = new Cal_Method(); public Form1() &#123; Debug.WriteLine(path); InitializeComponent(); &#125; string path_modify(string path,int rid_Num) &#123; string[] p_each = path.Split('\\\\'); string modified_path = \"\"; for (int i = 0; i &lt; p_each.Length - rid_Num; i++) &#123; modified_path += p_each[i]+\"\\\\\"; &#125; modified_path=modified_path.Remove(modified_path.Length-1); Debug.WriteLine(modified_path); return modified_path; &#125; private void get_2d_data_click(object sender, EventArgs e) &#123; points= new List&lt;double[]&gt;(); OpenFileDialog theDialog = new OpenFileDialog(); //file upload window theDialog.Title = \"Open Text File\"; theDialog.Filter = \"TXT files|*.txt\"; //file upload 창에서 text file만 보이도록 theDialog.InitialDirectory = @path_modify(path, 2)+\"\\\\data_files\"; if (theDialog.ShowDialog() == DialogResult.OK) &#123; string[] lines = System.IO.File.ReadAllLines(theDialog.FileName); string text = System.IO.File.ReadAllText(theDialog.FileName); textBox1.Text = text; foreach (string line in lines) &#123; string[] s = line.Split(','); double[] temp = &#123; Double.Parse(s[1]), Double.Parse(s[2]) &#125;; // Parse: 문자형 -&gt; 숫자형으로 형변환 points.Add(temp); &#125; Enalbe_3d_button = true; &#125; &#125; private void leg_8_Click(object sender, EventArgs e) &#123; if (Enalbe_3d_button == true) &#123; To3D.Enabled = true; &#125; legs = 8; &#125; private void leg_12_Click(object sender, EventArgs e) &#123; if (Enalbe_3d_button == true) &#123; To3D.Enabled = true; &#125; legs = 12; &#125; /// &lt;summary&gt; /// 3D Data로 전환 /// &lt;/summary&gt; private void To_3D_click(object sender, EventArgs e) &#123; if (legs == 8) &#123; string[] Joint = &#123; \"Joint1_c_1_1\", \"Joint1_r_2_1\", \"Joint1_r_2_2\", \"Joint1_l_2_1\", \"Joint1_l_2_2\", \"Joint1_r_3_1\", \"Joint1_l_3_1\", \"Joint1_r_4_1\", \"Joint1_r_4_2\", \"Joint1_l_4_1\", \"Joint1_l_4_2\", \"Joint1_r_5_1\", \"Joint1_l_5_1\", \"Joint1_r_6_1\", \"Joint1_l_6_1\", \"Joint1_r_7_1\", \"Joint1_r_7_2\", \"Joint1_l_7_1\", \"Joint1_l_7_2\", \"Joint2_r_2_1\", \"Joint2_r_2_2\", \"Joint2_l_2_1\", \"Joint2_l_2_2\", \"Joint2_r_3_1\", \"Joint2_l_3_1\", \"Joint2_r_4_1\", \"Joint2_r_4_2\", \"Joint2_l_4_1\", \"Joint2_l_4_2\", \"Joint2_r_5_1\", \"Joint2_l_5_1\", \"Joint2_r_6_1\", \"Joint2_l_6_1\", \"Joint2_r_7_1\", \"Joint2_r_7_2\", \"Joint2_l_7_1\", \"Joint2_l_7_2\", \"Joint3_c_1_1\", \"Joint3_r_2_1\", \"Joint3_r_2_2\", \"Joint3_l_2_1\", \"Joint3_l_2_2\", \"Joint3_r_3_1\", \"Joint3_l_3_1\", \"Joint3_r_4_1\", \"Joint3_r_4_2\", \"Joint3_l_4_1\", \"Joint3_l_4_2\", \"Joint3_r_5_1\", \"Joint3_l_5_1\", \"Joint3_r_6_1\", \"Joint3_l_6_1\", \"Joint3_r_7_1\", \"Joint3_r_7_2\", \"Joint3_l_7_1\", \"Joint3_l_7_2\", \"Joint4_r_2_1\", \"Joint4_r_2_2\", \"Joint4_l_2_1\", \"Joint4_l_2_2\", \"Joint4_r_3_1\", \"Joint4_l_3_1\", \"Joint4_r_4_1\", \"Joint4_r_4_2\", \"Joint4_l_4_1\", \"Joint4_l_4_2\", \"Joint4_r_5_1\", \"Joint4_l_5_1\", \"Joint4_r_6_1\", \"Joint4_l_6_1\", \"Joint4_r_7_1\", \"Joint4_r_7_2\", \"Joint4_l_7_1\", \"Joint4_l_7_2\" &#125;; string[] Jointorientation = &#123; \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"1.570796327,0,-3.141592741\", \"1.570796327,0,-3.141592741\", \"-1.570796327,0,0\", \"1.570796327,0,0\", \"-1.570796327,0,0\", \"1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"1.570796327,0,0\", \"1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"1.570796327,0,-3.141592741\", \"1.570796327,0,-3.141592741\", \"-1.570796327,0,0\", \"1.570796327,0,0\", \"-1.570796327,0,0\", \"1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"1.570796327,0,0\", \"1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"1.570796327,0,-3.141592741\", \"1.570796327,0,-3.141592741\", \"-1.570796327,0,0\", \"1.570796327,0,0\", \"-1.570796327,0,0\", \"1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"1.570796327,0,0\", \"1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"1.570796327,0,-3.141592741\", \"1.570796327,0,-3.141592741\", \"-1.570796327,0,0\", \"1.570796327,0,0\", \"-1.570796327,0,0\", \"1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"1.570796327,0,0\", \"1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\" &#125;; string[] JointYvalue = new string[74]; string[] Bar = &#123; \"bar1_c_1\", \"bar1_c_2\", \"bar1_r_3\", \"bar1_l_3\", \"bar1_r_4\", \"bar1_l_4\", \"bar1_r_5\", \"bar1_l_5\", \"bar1_r_6\", \"bar1_l_6\", \"bar1_r_7\", \"bar1_l_7\", \"bar1_r_8\", \"bar1_l_8\", \"bar1_r_9\", \"bar1_l_9\", \"bar1_r_10\", \"bar1_l_10\", \"bar2_c_1\", \"bar2_c_2\", \"bar2_r_3\", \"bar2_l_3\", \"bar2_r_4\", \"bar2_l_4\", \"bar2_r_5\", \"bar2_l_5\", \"bar2_r_6\", \"bar2_l_6\", \"bar2_r_7\", \"bar2_l_7\", \"bar2_r_8\", \"bar2_l_8\", \"bar2_r_9\", \"bar2_l_9\", \"bar2_r_10\", \"bar2_l_10\", \"bar3_c_1\", \"bar3_c_2\", \"bar3_r_3\", \"bar3_l_3\", \"bar3_r_4\", \"bar3_l_4\", \"bar3_r_5\", \"bar3_l_5\", \"bar3_r_6\", \"bar3_l_6\", \"bar3_r_7\", \"bar3_l_7\", \"bar3_r_8\", \"bar3_l_8\", \"bar3_r_9\", \"bar3_l_9\", \"bar3_r_10\", \"bar3_l_10\", \"bar4_c_1\", \"bar4_c_2\", \"bar4_r_3\", \"bar4_l_3\", \"bar4_r_4\", \"bar4_l_4\", \"bar4_r_5\", \"bar4_l_5\", \"bar4_r_6\", \"bar4_l_6\", \"bar4_r_7\", \"bar4_l_7\", \"bar4_r_8\", \"bar4_l_8\", \"bar4_r_9\", \"bar4_l_9\", \"bar4_r_10\", \"bar4_l_10\" &#125;; string[] BarYvalue = new string[72]; string[] Barorientation = &#123; &#125;; string[] Dummy = &#123; \"Dummy1A\", \"Dummy1A0\", \"Dummy1A2\", \"Dummy1A3\", \"Dummy1B\", \"Dummy1B0\", \"Dummy1B2\", \"Dummy1B3\", \"Dummy1A1\", \"Dummy1B1\", \"Dummy1A4\", \"Dummy1B4\", \"Dummy2A\", \"Dummy2A0\", \"Dummy2A2\", \"Dummy2A3\", \"Dummy2B\", \"Dummy2B0\", \"Dummy2B2\", \"Dummy2B3\", \"Dummy2A1\", \"Dummy2B1\", \"Dummy2A4\", \"Dummy2B4\", \"Dummy3A\", \"Dummy3A0\", \"Dummy3A2\", \"Dummy3A3\", \"Dummy3B\", \"Dummy3B0\", \"Dummy3B2\", \"Dummy3B3\", \"Dummy3A1\", \"Dummy3B1\", \"Dummy3A4\", \"Dummy3B4\", \"Dummy4A\", \"Dummy4A0\", \"Dummy4A2\", \"Dummy4A3\", \"Dummy4B\", \"Dummy4B0\", \"Dummy4B2\", \"Dummy4B3\", \"Dummy4A1\", \"Dummy4B1\", \"Dummy4B4\", \"Dummy4B4\" &#125;; string[] Sphere = &#123; \"Sphere1_1\", \"Sphere1_2\", \"Sphere2_1\", \"Sphere2_2\", \"Sphere3_1\", \"Sphere3_2\", \"Sphere4_1\", \"Sphere4_2\" &#125;; string[] Force_sensor = &#123; \"Force_sensor1_1\", \"Force_sensor1_2\", \"Force_sensor2_1\", \"Force_sensor2_2\", \"Force_sensor3_1\", \"Force_sensor3_2\", \"Force_sensor4_1\", \"Force_sensor4_2\" &#125;; double[][] point_r = new double[8][]; double[][] point_l = new double[8][]; double[][] p0 = getP.GetP(points.ToArray(), 90); double[][] p180 = getP.GetP(points.ToArray(), 270); System.IO.StreamWriter writer; writer = File.CreateText(@\"C:\\\\Program Files\\V-REP3\\data_files\\3D_8legs.txt\"); #region Joints double[] Joint_Y_default = &#123; 0.0025, 0.015, 0.015, 0.015, 0.015, 0.02, 0.0175, 0.01, 0.01, 0.01, 0.01, 0.015, 0.015, 0.0125, 0.0125, 0.0175, 0.0175, 0.0175, 0.0175 &#125;; // 19개 double[] Joint_Y_modifier = &#123; 0, -0.1, -0.3, -0.4&#125;; int Joint_Y_index = 0; int current_Joint = 0; int point_Number = 0; // initialize k = point number for (int i = 0; i &lt; Joint.Length; i++) &#123; if (current_Joint != (int)Char.GetNumericValue(Joint[i][5])) &#123; current_Joint++; &#123; switch (current_Joint) &#123; case 1: case 3: point_r = p0; point_l = p0; Joint_Y_index = 0; break; default: point_r = p180; point_l = p180; Joint_Y_index = 1; break; &#125; &#125; &#125; JointYvalue[i] = (Joint_Y_default[Joint_Y_index] + Joint_Y_modifier[current_Joint - 1]).ToString(); point_Number = (int)Char.GetNumericValue(Joint[i][9]) - 1; if (Joint[i][7] == Convert.ToChar(\"r\")) &#123; // X Y Z &amp; Orientation writer.WriteLine(Joint[i] + \",\" + (-point_r[point_Number][0]).ToString() + \",\" + JointYvalue[i] + \",\" + point_r[point_Number][1].ToString() + \",\" + Jointorientation[i]); &#125; else &#123; writer.WriteLine(Joint[i] + \",\" + point_l[point_Number][0].ToString() + \",\" + JointYvalue[i] + \",\" + point_l[point_Number][1].ToString() + \",\" + Jointorientation[i]); &#125; Joint_Y_index++; &#125; #endregion #region Bar double[] Bar_Y_default = &#123; 0, 0.005, 0.02, 0.015, 0.015, 0.02, 0.015, 0.02, 0.02, 0.015, 0.01, 0.025, 0.025, 0.01, 0.015, 0.02, 0.01, 0.025 &#125;; double[] Bar_Y_modifier = &#123; 0, -0.1, -0.3, -0.4&#125;; //Bar_Y_modifier[current_Bar-1] int[,] Bar_Joint_combination = new int[10, 2] &#123; &#123; 0, 0 &#125;, &#123; 1, 0 &#125;, &#123; 1, 2 &#125;, &#123; 3, 2 &#125;, &#123; 4, 3 &#125;, &#123; 6, 3 &#125;, &#123; 5, 4 &#125;, &#123; 6, 1 &#125;, &#123; 6, 5 &#125;, &#123; 7, 6 &#125; &#125;; int Bar_Y_index = 0; int current_Bar = 0; int Bar_Number = 0; int Bar_point1 = 0; int Bar_point2 = 0; for (int i = 0; i &lt; Bar.Length; i++) &#123; if (current_Bar != (int)Char.GetNumericValue(Bar[i][3])) &#123; current_Bar++; Bar_Y_index = 0; switch (current_Bar) &#123; case 1: case 3: point_r = p0; point_l = p0; break; default: point_r = p180; point_l = p180; break; &#125; &#125; //position Bar_Number = (int)Char.GetNumericValue(Bar[i][7]); if (Bar[i].Length == 9) &#123; //10일 경우 bar #1로 알아먹는거 방지 Bar_Number = 10; &#125; Bar_point1 = Bar_Joint_combination[Bar_Number - 1, 0]; Bar_point2 = Bar_Joint_combination[Bar_Number - 1, 1]; //Yvalue BarYvalue[i] = (Bar_Y_default[Bar_Y_index] + Bar_Y_modifier[current_Bar - 1]).ToString(); if (Bar[i][5] == 'l') &#123; writer.WriteLine(Bar[i] + \",\" + ((point_l[Bar_point1][0] + point_l[Bar_point2][0]) / 2).ToString() + \",\" + BarYvalue[i] + \",\" + ((point_l[Bar_point1][1] + point_l[Bar_point2][1]) / 2).ToString() + \",1.570796327,0,\" + cal.slope_cal(point_l[Bar_point1], point_l[Bar_point2]) + \",\" + (cal.distance_cal(point_l[Bar_point1], point_l[Bar_point2]) + 0.0125)); &#125; else if (Bar[i][5] == 'r' || Bar[i][7] == '2') &#123; writer.WriteLine(Bar[i] + \",\" + (-(point_r[Bar_point1][0] + point_r[Bar_point2][0]) / 2).ToString() + \",\" + BarYvalue[i] + \",\" + ((point_r[Bar_point1][1] + point_r[Bar_point2][1]) / 2).ToString() + \",-1.570796327,0,\" + cal.slope_cal(point_r[Bar_point1], point_r[Bar_point2]) + \",\" + (cal.distance_cal(point_r[Bar_point1], point_r[Bar_point2]) + 0.0125)); &#125; else if (Bar[i][7] == '1')//Bar#_c_1 &#123; writer.WriteLine(Bar[i] + \",\" + (-(point_r[Bar_point1][0] + point_r[Bar_point2][0]) / 2).ToString() + \",\" + BarYvalue[i] + \",\" + ((point_r[Bar_point1][1] + point_r[Bar_point2][1]) / 2).ToString() + \",-1.570796327,0,0,\" + ((point_l[3][0] * 2) + 0.0125)); &#125; Bar_Y_index++; &#125; //bar_u for (int i = 0; i &lt; 1; i++) &#123; if (i == 0) &#123; writer.WriteLine(\"bar_u,0,-0.2,\" + (p0[i + 1][1] + 0.04) + \",0,0,1.570796327,0.605\"); writer.WriteLine(\"bar1_u,0,0,\" + (p0[i + 1][1]) + \",1.570796327,0,1.570796327,\" + (p0[i + 1][1] + 0.03625 - p0[i][1])); writer.WriteLine(\"bar2_u,0,-0.1,\" + (p0[i + 1][1]) + \",1.570796327,0,1.570796327,\" + (p0[i + 1][1] + 0.03625 - p0[i][1])); writer.WriteLine(\"bar3_u,0,-0.3,\" + (p0[i + 1][1]) + \",1.570796327,0,1.570796327,\" + (p0[i + 1][1] + 0.03625 - p0[i][1])); writer.WriteLine(\"bar4_u,0,-0.4,\" + (p0[i + 1][1]) + \",1.570796327,0,1.570796327,\" + (p0[i + 1][1] + 0.03625 - p0[i][1])); &#125; &#125; #endregion #region dummy int current_Dummy = 0; for (int i = 0; i &lt; Dummy.Length; i++) &#123; if (current_Dummy != (int)Char.GetNumericValue(Dummy[i][5])) &#123; current_Dummy++; switch (current_Dummy) &#123; case 1: case 3: point_r = p0; point_l = p0; break; default: point_r = p180; point_l = p180; break; &#125; &#125; if (Dummy[i].Length == 7) &#123; writer.WriteLine(Dummy[i] + \",\" + point_l[1][0] + \",\" + point_l[1][1]); &#125; else if (Dummy[i][7] == '1') &#123; writer.WriteLine(Dummy[i] + \",\" + -point_r[4][0] + \",\" + point_r[4][1]); &#125; else if (Dummy[i][7] == '4') &#123; writer.WriteLine(Dummy[i] + \",\" + point_l[4][0] + \",\" + point_l[4][1]); &#125; else &#123; writer.WriteLine(Dummy[i] + \",\" + point_l[1][0] + \",\" + point_l[1][1]); &#125; &#125; #endregion #region Sphere &amp; forcesensor //Sphere+forcesensor int current_Sphere = 0; for (int i = 0; i &lt; Sphere.Length; i++) &#123; if (current_Sphere != (int)Char.GetNumericValue(Sphere[i][6])) &#123; current_Sphere++; switch (current_Sphere) &#123; case 1: case 3: point_r = p0; point_l = p0; break; default: point_r = p180; point_l = p180; break; &#125; &#125; if (Sphere[i][8] == '1') &#123; writer.WriteLine(Sphere[i] + \",\" + point_l[7][0] + \",\" + point_l[7][1]); &#125; else &#123; writer.WriteLine(Sphere[i] + \",\" + -point_r[7][0] + \",\" + point_r[7][1]); &#125; &#125; int current_Sensor = 0; for (int i = 0; i &lt; Force_sensor.Length; i++) &#123; if (current_Sensor != (int)Char.GetNumericValue(Force_sensor[i][12])) &#123; current_Sensor++; switch (current_Sensor) &#123; case 1: case 3: point_r = p0; point_l = p0; break; default: point_r = p180; point_l = p180; break; &#125; &#125; if (Force_sensor[i][14] == '1') &#123; writer.WriteLine(Force_sensor[i] + \",\" + point_l[7][0] + \",\" + point_l[7][1]); &#125; else &#123; writer.WriteLine(Force_sensor[i] + \",\" + -point_r[7][0] + \",\" + point_r[7][1]); &#125; &#125; #endregion writer.Close(); &#125; if (legs == 12) &#123; //Joint 110개, 각 18개 + J1,J3 한개씩 string[] Joint = &#123; \"Joint1_c_1_1\", \"Joint1_r_2_1\", \"Joint1_r_2_2\", \"Joint1_l_2_1\", \"Joint1_l_2_2\", \"Joint1_r_3_1\", \"Joint1_l_3_1\", \"Joint1_r_4_1\", \"Joint1_r_4_2\", \"Joint1_l_4_1\", \"Joint1_l_4_2\", \"Joint1_r_5_1\", \"Joint1_l_5_1\", \"Joint1_r_6_1\", \"Joint1_l_6_1\", \"Joint1_r_7_1\", \"Joint1_r_7_2\", \"Joint1_l_7_1\", \"Joint1_l_7_2\", \"Joint2_r_2_1\", \"Joint2_r_2_2\", \"Joint2_l_2_1\", \"Joint2_l_2_2\", \"Joint2_r_3_1\", \"Joint2_l_3_1\", \"Joint2_r_4_1\", \"Joint2_r_4_2\", \"Joint2_l_4_1\", \"Joint2_l_4_2\", \"Joint2_r_5_1\", \"Joint2_l_5_1\", \"Joint2_r_6_1\", \"Joint2_l_6_1\", \"Joint2_r_7_1\", \"Joint2_r_7_2\", \"Joint2_l_7_1\", \"Joint2_l_7_2\", \"Joint3_c_1_1\", \"Joint3_r_2_1\", \"Joint3_r_2_2\", \"Joint3_l_2_1\", \"Joint3_l_2_2\", \"Joint3_r_3_1\", \"Joint3_l_3_1\", \"Joint3_r_4_1\", \"Joint3_r_4_2\", \"Joint3_l_4_1\", \"Joint3_l_4_2\", \"Joint3_r_5_1\", \"Joint3_l_5_1\", \"Joint3_r_6_1\", \"Joint3_l_6_1\", \"Joint3_r_7_1\", \"Joint3_r_7_2\", \"Joint3_l_7_1\", \"Joint3_l_7_2\", \"Joint4_r_2_1\", \"Joint4_r_2_2\", \"Joint4_l_2_1\", \"Joint4_l_2_2\", \"Joint4_r_3_1\", \"Joint4_l_3_1\", \"Joint4_r_4_1\", \"Joint4_r_4_2\", \"Joint4_l_4_1\", \"Joint4_l_4_2\", \"Joint4_r_5_1\", \"Joint4_l_5_1\", \"Joint4_r_6_1\", \"Joint4_l_6_1\", \"Joint4_r_7_1\", \"Joint4_r_7_2\", \"Joint4_l_7_1\", \"Joint4_l_7_2\", \"Joint5_r_2_1\", \"Joint5_r_2_2\", \"Joint5_l_2_1\", \"Joint5_l_2_2\", \"Joint5_r_3_1\", \"Joint5_l_3_1\", \"Joint5_r_4_1\", \"Joint5_r_4_2\", \"Joint5_l_4_1\", \"Joint5_l_4_2\", \"Joint5_r_5_1\", \"Joint5_l_5_1\", \"Joint5_r_6_1\", \"Joint5_l_6_1\", \"Joint5_r_7_1\", \"Joint5_r_7_2\", \"Joint5_l_7_1\", \"Joint5_l_7_2\", \"Joint6_r_2_1\", \"Joint6_r_2_2\", \"Joint6_l_2_1\", \"Joint6_l_2_2\", \"Joint6_r_3_1\", \"Joint6_l_3_1\", \"Joint6_r_4_1\", \"Joint6_r_4_2\", \"Joint6_l_4_1\", \"Joint6_l_4_2\", \"Joint6_r_5_1\", \"Joint6_l_5_1\", \"Joint6_r_6_1\", \"Joint6_l_6_1\", \"Joint6_r_7_1\", \"Joint6_r_7_2\", \"Joint6_l_7_1\", \"Joint6_l_7_2\" &#125;; string[] Jointorientation = &#123; \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"1.570796327,0,-3.141592741\", \"1.570796327,0,-3.141592741\", \"-1.570796327,0,0\", \"1.570796327,0,0\", \"-1.570796327,0,0\", \"1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"1.570796327,0,0\", \"1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"1.570796327,0,-3.141592741\", \"1.570796327,0,-3.141592741\", \"-1.570796327,0,0\", \"1.570796327,0,0\", \"-1.570796327,0,0\", \"1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"1.570796327,0,0\", \"1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"1.570796327,0,-3.141592741\", \"1.570796327,0,-3.141592741\", \"-1.570796327,0,0\", \"1.570796327,0,0\", \"-1.570796327,0,0\", \"1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"1.570796327,0,0\", \"1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"1.570796327,0,-3.141592741\", \"1.570796327,0,-3.141592741\", \"-1.570796327,0,0\", \"1.570796327,0,0\", \"-1.570796327,0,0\", \"1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"1.570796327,0,0\", \"1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"1.570796327,0,-3.141592741\", \"1.570796327,0,-3.141592741\", \"-1.570796327,0,0\", \"1.570796327,0,0\", \"-1.570796327,0,0\", \"1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"1.570796327,0,0\", \"1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"1.570796327,0,-3.141592741\", \"1.570796327,0,-3.141592741\", \"-1.570796327,0,0\", \"1.570796327,0,0\", \"-1.570796327,0,0\", \"1.570796327,0,0\", \"-1.570796327,0,0\", \"-1.570796327,0,0\", \"1.570796327,0,0\", \"1.570796327,0,0\" &#125;; string[] JointYvalue = new string[110]; //bar 108개, 각 18개 string[] Bar = &#123; \"bar1_c_1\", \"bar1_c_2\", \"bar1_r_3\", \"bar1_l_3\", \"bar1_r_4\", \"bar1_l_4\", \"bar1_r_5\", \"bar1_l_5\", \"bar1_r_6\", \"bar1_l_6\", \"bar1_r_7\", \"bar1_l_7\", \"bar1_r_8\", \"bar1_l_8\", \"bar1_r_9\", \"bar1_l_9\", \"bar1_r_10\", \"bar1_l_10\", \"bar2_c_1\", \"bar2_c_2\", \"bar2_r_3\", \"bar2_l_3\", \"bar2_r_4\", \"bar2_l_4\", \"bar2_r_5\", \"bar2_l_5\", \"bar2_r_6\", \"bar2_l_6\", \"bar2_r_7\", \"bar2_l_7\", \"bar2_r_8\", \"bar2_l_8\", \"bar2_r_9\", \"bar2_l_9\", \"bar2_r_10\", \"bar2_l_10\", \"bar3_c_1\", \"bar3_c_2\", \"bar3_r_3\", \"bar3_l_3\", \"bar3_r_4\", \"bar3_l_4\", \"bar3_r_5\", \"bar3_l_5\", \"bar3_r_6\", \"bar3_l_6\", \"bar3_r_7\", \"bar3_l_7\", \"bar3_r_8\", \"bar3_l_8\", \"bar3_r_9\", \"bar3_l_9\", \"bar3_r_10\", \"bar3_l_10\", \"bar4_c_1\", \"bar4_c_2\", \"bar4_r_3\", \"bar4_l_3\", \"bar4_r_4\", \"bar4_l_4\", \"bar4_r_5\", \"bar4_l_5\", \"bar4_r_6\", \"bar4_l_6\", \"bar4_r_7\", \"bar4_l_7\", \"bar4_r_8\", \"bar4_l_8\", \"bar4_r_9\", \"bar4_l_9\", \"bar4_r_10\", \"bar4_l_10\", \"bar5_c_1\", \"bar5_c_2\", \"bar5_r_3\", \"bar5_l_3\", \"bar5_r_4\", \"bar5_l_4\", \"bar5_r_5\", \"bar5_l_5\", \"bar5_r_6\", \"bar5_l_6\", \"bar5_r_7\", \"bar5_l_7\", \"bar5_r_8\", \"bar5_l_8\", \"bar5_r_9\", \"bar5_l_9\", \"bar5_r_10\", \"bar5_l_10\", \"bar6_c_1\", \"bar6_c_2\", \"bar6_r_3\", \"bar6_l_3\", \"bar6_r_4\", \"bar6_l_4\", \"bar6_r_5\", \"bar6_l_5\", \"bar6_r_6\", \"bar6_l_6\", \"bar6_r_7\", \"bar6_l_7\", \"bar6_r_8\", \"bar6_l_8\", \"bar6_r_9\", \"bar6_l_9\", \"bar6_r_10\", \"bar6_l_10\" &#125;; string[] BarYvalue = new string[108]; string[] Barorientation = &#123; &#125;; //Dummy 72개, 각 12개 string[] Dummy = &#123; \"Dummy1A\", \"Dummy1A0\", \"Dummy1A2\", \"Dummy1A3\", \"Dummy1B\", \"Dummy1B0\", \"Dummy1B2\", \"Dummy1B3\", \"Dummy1A1\", \"Dummy1B1\", \"Dummy1A4\", \"Dummy1B4\", \"Dummy2A\", \"Dummy2A0\", \"Dummy2A2\", \"Dummy2A3\", \"Dummy2B\", \"Dummy2B0\", \"Dummy2B2\", \"Dummy2B3\", \"Dummy2A1\", \"Dummy2B1\", \"Dummy2A4\", \"Dummy2B4\", \"Dummy3A\", \"Dummy3A0\", \"Dummy3A2\", \"Dummy3A3\", \"Dummy3B\", \"Dummy3B0\", \"Dummy3B2\", \"Dummy3B3\", \"Dummy3A1\", \"Dummy3B1\", \"Dummy3A4\", \"Dummy3B4\", \"Dummy4A\", \"Dummy4A0\", \"Dummy4A2\", \"Dummy4A3\", \"Dummy4B\", \"Dummy4B0\", \"Dummy4B2\", \"Dummy4B3\", \"Dummy4A1\", \"Dummy4B1\", \"Dummy4B4\", \"Dummy4B4\", \"Dummy5A\", \"Dummy5A0\", \"Dummy5A2\", \"Dummy5A3\", \"Dummy5B\", \"Dummy5B0\", \"Dummy5B2\", \"Dummy5B3\", \"Dummy5A1\", \"Dummy5B1\", \"Dummy5A4\", \"Dummy5B4\", \"Dummy6A\", \"Dummy6A0\", \"Dummy6A2\", \"Dummy6A3\", \"Dummy6B\", \"Dummy6B0\", \"Dummy6B2\", \"Dummy6B3\", \"Dummy6A1\", \"Dummy6B1\", \"Dummy6A4\", \"Dummy6B4\" &#125;; string[] Sphere = &#123; \"Sphere1_1\", \"Sphere1_2\", \"Sphere2_1\", \"Sphere2_2\", \"Sphere3_1\", \"Sphere3_2\", \"Sphere4_1\", \"Sphere4_2\", \"Sphere5_1\", \"Sphere5_2\", \"Sphere6_1\", \"Sphere6_2\" &#125;; string[] Force_sensor = &#123; \"Force_sensor1_1\", \"Force_sensor1_2\", \"Force_sensor2_1\", \"Force_sensor2_2\", \"Force_sensor3_1\", \"Force_sensor3_2\", \"Force_sensor4_1\", \"Force_sensor4_2\", \"Force_sensor5_1\", \"Force_sensor5_2\", \"Force_sensor6_1\", \"Force_sensor6_2\" &#125;; double[][] point_r = new double[8][]; double[][] point_l = new double[8][]; double[][] p0 = getP.GetP(points.ToArray(), 90); double[][] p120 = getP.GetP(points.ToArray(), 210); double[][] p240 = getP.GetP(points.ToArray(), 330); System.IO.StreamWriter writer; writer = File.CreateText(@\"C:\\\\Program Files\\V-REP3\\data_files\\3D_12leg.txt\"); #region Joints double[] Joint_Y_default = &#123; 0.0025, 0.015, 0.015, 0.015, 0.015, 0.02, 0.0175, 0.01, 0.01, 0.01, 0.01, 0.015, 0.015, 0.0125, 0.0125, 0.0175, 0.0175, 0.0175, 0.0175 &#125;; // 19개 double[] Joint_Y_modifier = &#123; 0, -0.1, -0.3, -0.4, 0.1, -0.5 &#125;; int Joint_Y_index = 0; int current_Joint = 0; int point_Number = 0; // initialize k = point number for (int i = 0; i &lt; Joint.Length; i++) &#123; if (current_Joint != (int)Char.GetNumericValue(Joint[i][5])) &#123; current_Joint++; switch (current_Joint) &#123; case 1: point_r = p120; point_l = p240; Joint_Y_index = 0; break; case 2: point_r = p0; point_l = p0; Joint_Y_index = 1; break; case 3: point_r = p0; point_l = p0; Joint_Y_index = 0; break; case 4: point_r = p120; point_l = p240; Joint_Y_index = 1; break; case 5: point_r = p240; point_l = p120; Joint_Y_index = 1; break; case 6: point_r = p240; point_l = p120; Joint_Y_index = 1; break; default: Joint_Y_index = 1; break; &#125; &#125; JointYvalue[i] = (Joint_Y_default[Joint_Y_index] + Joint_Y_modifier[current_Joint - 1]).ToString(); point_Number = (int)Char.GetNumericValue(Joint[i][9]) - 1; if (Joint[i][7] == Convert.ToChar(\"r\")) &#123; // X Y Z &amp; Orientation writer.WriteLine(Joint[i] + \",\" + (-point_r[point_Number][0]).ToString() + \",\" + JointYvalue[i] + \",\" + point_r[point_Number][1].ToString() + \",\" + Jointorientation[i]); // Debug.WriteLine(Joint[i] + \"//\" + (100 * Math.Round((-point_r[point_Number][0]), 3)).ToString() + \",\" + (100 * Math.Round(point_r[point_Number][1], 3)).ToString() +\" // \"+JointYvalue[i].ToString()); &#125; else &#123; writer.WriteLine(Joint[i] + \",\" + point_l[point_Number][0].ToString() + \",\" + JointYvalue[i] + \",\" + point_l[point_Number][1].ToString() + \",\" + Jointorientation[i]); // Debug.WriteLine(Joint[i] + \"//\" + (100 * Math.Round((point_l[point_Number][0]), 3)).ToString() + \",\" + (100 * Math.Round(point_l[point_Number][1], 3)).ToString() + \" // \"+ JointYvalue[i].ToString()); &#125; Joint_Y_index++; &#125; #endregion #region Bar double[] Bar_Y_default = &#123; 0, 0.005, 0.02, 0.015, 0.015, 0.02, 0.015, 0.02, 0.02, 0.015, 0.01, 0.025, 0.025, 0.01, 0.015, 0.02, 0.01, 0.025 &#125;; double[] Bar_Y_modifier = &#123; 0, -0.1, -0.3, -0.4, 0.1, -0.5 &#125;; //Bar_Y_modifier[current_Bar-1] int[,] Bar_Joint_combination = new int[10, 2] &#123; &#123; 0, 0 &#125;, &#123; 1, 0 &#125;, &#123; 1, 2 &#125;, &#123; 3, 2 &#125;, &#123; 4, 3 &#125;, &#123; 6, 3 &#125;, &#123; 5, 4 &#125;, &#123; 6, 1 &#125;, &#123; 6, 5 &#125;, &#123; 7, 6 &#125; &#125;; int Bar_Y_index = 0; int current_Bar = 0; int Bar_Number = 0; int Bar_point1 = 0; int Bar_point2 = 0; for (int i = 0; i &lt; 108; i++) &#123; if (current_Bar != (int)Char.GetNumericValue(Bar[i][3])) &#123; current_Bar++; Bar_Y_index = 0; switch (current_Bar) &#123; case 1: point_r = p120; point_l = p240; break; case 2: point_r = p0; point_l = p0; break; case 3: point_r = p0; point_l = p0; break; case 4: point_r = p120; point_l = p240; break; case 5: point_r = p240; point_l = p120; break; case 6: point_r = p240; point_l = p120; break; &#125; &#125; //position Bar_Number = (int)Char.GetNumericValue(Bar[i][7]); if (Bar[i].Length == 9) &#123; //10일 경우 bar #1로 알아먹는거 방지 Bar_Number = 10; &#125; Bar_point1 = Bar_Joint_combination[Bar_Number - 1, 0]; Bar_point2 = Bar_Joint_combination[Bar_Number - 1, 1]; //Yvalue BarYvalue[i] = (Bar_Y_default[Bar_Y_index] + Bar_Y_modifier[current_Bar - 1]).ToString(); if (Bar[i][5] == 'l') &#123; writer.WriteLine(Bar[i] + \",\" + ((point_l[Bar_point1][0] + point_l[Bar_point2][0]) / 2).ToString() + \",\" + BarYvalue[i] + \",\" + ((point_l[Bar_point1][1] + point_l[Bar_point2][1]) / 2).ToString() + \",1.570796327,0,\" + cal.slope_cal(point_l[Bar_point1], point_l[Bar_point2]) + \",\" + (cal.distance_cal(point_l[Bar_point1], point_l[Bar_point2]) + 0.0125)); //Debug.WriteLine(Bar[i]+\"//\"+(100 * Math.Round(((point_l[Bar_point1][0] + point_l[Bar_point2][0]) / 2), 3)).ToString() + \",\" + (100 * Math.Round(((point_l[Bar_point1][1] + point_l[Bar_point2][1]) / 2), 3)).ToString() + \" ////\" + Math.Round(-cal.slope_cal(point_l[Bar_point1], point_l[Bar_point2]) * 180 / Math.PI,3)); &#125; else if (Bar[i][5] == 'r' || Bar[i][7] == '2') &#123; writer.WriteLine(Bar[i] + \",\" + (-(point_r[Bar_point1][0] + point_r[Bar_point2][0]) / 2).ToString() + \",\" + BarYvalue[i] + \",\" + ((point_r[Bar_point1][1] + point_r[Bar_point2][1]) / 2).ToString() + \",-1.570796327,0,\" + cal.slope_cal(point_r[Bar_point1], point_r[Bar_point2]) + \",\" + (cal.distance_cal(point_r[Bar_point1], point_r[Bar_point2]) + 0.0125)); //if (Bar[i][7] == '2') //&#123; // Debug.WriteLine(Bar[i] + \"//\" + (100 * Math.Round((-(point_r[Bar_point1][0] + point_r[Bar_point2][0]) / 2), 3)).ToString() + \",\" + (100 * Math.Round(((point_r[Bar_point1][1] + point_r[Bar_point2][1]) / 2), 3)).ToString() + \" ////\" + Math.Round(-cal.slope_cal(point_r[Bar_point1], point_r[Bar_point2])) * 180 / Math.PI); //&#125; &#125; else if (Bar[i][7] == '1')//Bar#_c_1 &#123; writer.WriteLine(Bar[i] + \",\" + (-(point_r[Bar_point1][0] + point_r[Bar_point2][0]) / 2).ToString() + \",\" + BarYvalue[i] + \",\" + ((point_r[Bar_point1][1] + point_r[Bar_point2][1]) / 2).ToString() + \",-1.570796327,0,0,\" + ((point_l[3][0] * 2) + 0.0125)); //Debug.WriteLine(Bar[i] + \"//\" + (100 * Math.Round((-(point_r[Bar_point1][0] + point_r[Bar_point2][0]) / 2), 3)).ToString() + \",\" + (100 * Math.Round(((point_r[Bar_point1][1] + point_r[Bar_point2][1]) / 2), 3)).ToString()); &#125; Bar_Y_index++; &#125; //bar_u 수정 필요 bar_u for (int i = 0; i &lt; 1; i++) &#123; if (i == 0) &#123; writer.WriteLine(\"bar_u,0,-0.2,\" + (p0[i + 1][1] + 0.04) + \",0,0,1.570796327,0.605\"); writer.WriteLine(\"bar1_u,0,0,\" + (p0[i + 1][1]) + \",1.570796327,0,1.570796327,\" + (p0[i + 1][1] + 0.03625 - p0[i][1])); writer.WriteLine(\"bar2_u,0,-0.1,\" + (p0[i + 1][1]) + \",1.570796327,0,1.570796327,\" + (p0[i + 1][1] + 0.03625 - p0[i][1])); writer.WriteLine(\"bar3_u,0,-0.3,\" + (p0[i + 1][1]) + \",1.570796327,0,1.570796327,\" + (p0[i + 1][1] + 0.03625 - p0[i][1])); writer.WriteLine(\"bar4_u,0,-0.4,\" + (p0[i + 1][1]) + \",1.570796327,0,1.570796327,\" + (p0[i + 1][1] + 0.03625 - p0[i][1])); writer.WriteLine(\"bar5_u,0,0.1,\" + (p0[i + 1][1]) + \",1.570796327,0,1.570796327,\" + (p0[i + 1][1] + 0.03625 - p0[i][1])); writer.WriteLine(\"bar6_u,0,-0.5,\" + (p0[i + 1][1]) + \",1.570796327,0,1.570796327,\" + (p0[i + 1][1] + 0.03625 - p0[i][1])); &#125; &#125; #endregion #region dummy int current_Dummy = 0; for (int i = 0; i &lt; 72; i++) &#123; if (current_Dummy != (int)Char.GetNumericValue(Dummy[i][5])) &#123; current_Dummy++; switch (current_Dummy) &#123; case 1: point_r = p120; point_l = p240; break; case 2: point_r = p0; point_l = p0; break; case 3: point_r = p0; point_l = p0; break; case 4: point_r = p120; point_l = p240; break; case 5: point_r = p240; point_l = p120; break; case 6: point_r = p240; point_l = p120; break; &#125; &#125; if (Dummy[i].Length == 7) &#123; writer.WriteLine(Dummy[i] + \",\" + point_l[1][0] + \",\" + point_l[1][1]); &#125; else if (Dummy[i][7] == '1') &#123; writer.WriteLine(Dummy[i] + \",\" + -point_r[4][0] + \",\" + point_r[4][1]); &#125; else if (Dummy[i][7] == '4') &#123; writer.WriteLine(Dummy[i] + \",\" + point_l[4][0] + \",\" + point_l[4][1]); &#125; else &#123; writer.WriteLine(Dummy[i] + \",\" + point_l[1][0] + \",\" + point_l[1][1]); &#125; &#125; #endregion #region Sphere &amp; forcesensor //Sphere+forcesensor int current_Sphere = 0; for (int i = 0; i &lt; 12; i++) &#123; if (current_Sphere != (int)Char.GetNumericValue(Sphere[i][6])) &#123; current_Sphere++; switch (current_Sphere) &#123; case 1: point_r = p120; point_l = p240; break; case 2: point_r = p0; point_l = p0; break; case 3: point_r = p0; point_l = p0; break; case 4: point_r = p120; point_l = p240; break; case 5: point_r = p240; point_l = p120; break; case 6: point_r = p240; point_l = p120; break; &#125; &#125; if (Sphere[i][8] == '1') &#123; writer.WriteLine(Sphere[i] + \",\" + point_l[7][0] + \",\" + point_l[7][1]); &#125; else &#123; writer.WriteLine(Sphere[i] + \",\" + -point_r[7][0] + \",\" + point_r[7][1]); &#125; &#125; int current_Sensor = 0; for (int i = 0; i &lt; 12; i++) &#123; if (current_Sensor != (int)Char.GetNumericValue(Force_sensor[i][12])) &#123; current_Sensor++; switch (current_Sensor) &#123; case 1: point_r = p120; point_l = p240; break; case 2: point_r = p0; point_l = p0; break; case 3: point_r = p0; point_l = p0; break; case 4: point_r = p120; point_l = p240; break; case 5: point_r = p240; point_l = p120; break; case 6: point_r = p240; point_l = p120; break; &#125; &#125; if (Force_sensor[i][14] == '1') &#123; writer.WriteLine(Force_sensor[i] + \",\" + point_l[7][0] + \",\" + point_l[7][1]); &#125; else &#123; writer.WriteLine(Force_sensor[i] + \",\" + -point_r[7][0] + \",\" + point_r[7][1]); &#125; &#125; #endregion writer.Close(); &#125; is3D.Visible = true; &#125; private void button2_Click(object sender, EventArgs e) &#123; string path_vrep = \"C:\\\\Program Files\\\\V-REP3\\\\V-REP_PRO_EDU\\\\vrep.exe\"; string model_file = \"../models/\"; if (legs == 8) &#123; model_file += \"8leg.ttt\"; &#125; else &#123; model_file += \"12leg.ttt\"; &#125; Process vrep = new Process() &#123; //StartInfo = new ProcessStartInfo(path_vrep, \"-s10000 -q \" +model_file) StartInfo = new ProcessStartInfo(path_vrep, \"\" + model_file) &#123; WindowStyle = ProcessWindowStyle.Normal, WorkingDirectory = Path.GetDirectoryName(path_vrep), // The following commands are needed to redirect the standard output. // This means that it will be redirected to the Process.StandardOutput StreamReader. RedirectStandardOutput = true, UseShellExecute = false, CreateNoWindow = true &#125; &#125;; try &#123; vrep.Start(); // Get the output into a string string result = vrep.StandardOutput.ReadToEnd(); // Display the command output. &#125; catch (Exception ex) &#123; Debug.WriteLine(\"Error: \" + ex.Message); &#125; &#125; private void button3_Click(object sender, EventArgs e) &#123; string[] lines = System.IO.File.ReadAllLines(@\"C:\\\\Program Files\\\\V-REP3\\\\result\\\\result.txt\"); string text = System.IO.File.ReadAllText(@\"C:\\\\Program Files\\\\V-REP3\\\\result\\\\result.txt\"); // textBox1.Text = text; //EX) points[0][0][0] = path x,y와 속도 값 , force값 List&lt;double[]&gt; points = new List&lt;double[]&gt;(); foreach (string line in lines) &#123; string[] s = line.Split(','); double[] temp = &#123; Double.Parse(s[0]), Double.Parse(s[1]), Double.Parse(s[2]), Double.Parse(s[3]), Double.Parse(s[4]), Double.Parse(s[5]) &#125;; points.Add(temp); &#125; //평균속도 계산 double sum = 0; for (int i = 0; i &lt; 203; i++) &#123; double s; s = points[i][2]; sum = sum + s; &#125; double velo = sum / 203; textBox4.Text = string.Format(\"&#123;0:f3&#125;\", velo); //distance 설정 textBox6.Text = string.Format(\"&#123;0:f3&#125;\", points[202][0]); //Path그라프 설정 chart1.Series.Clear(); Series Path = chart1.Series.Add(\"Path\"); Path.ChartType = SeriesChartType.Line; for (int i = 0; i &lt; 203; i++) &#123; Path.Points.AddXY(string.Format(\"&#123;0:f3&#125;\", points[i][0]), points[i][1]); &#125; //force그라프 설정 chart2.Series.Clear(); Series Force = chart2.Series.Add(\"Force\"); Force.ChartType = SeriesChartType.Line; for (int i = 0; i &lt; 203; i++) &#123; Force.Points.AddXY(string.Format(\"&#123;0:f3&#125;\", points[i][0]), points[i][3]); &#125; //trajectory 그라프 설정 chart3.Series.Clear(); Series Trajectory = chart3.Series.Add(\"Trajectory\"); Trajectory.ChartType = SeriesChartType.Line; for (int i = 0; i &lt; 203; i++) &#123; Trajectory.Points.AddXY(points[i][4], points[i][5]); &#125; //O,X 가능성 if (points[202][0] &lt; 0.3) &#123; textBox5.Text = \"X\"; &#125; else &#123; textBox5.Text = \"O\"; &#125; &#125; &#125;&#125; Role전체 알고리즘을 내가 연구실에 들어오기 전에 영수가 만들어 놓았다. 이 프로그램의 확장성을 높이기 위해 프로그램을 다듬었고 다리의 갯수를 8개에서 12개로 늘리는 작업을 하였다 다리의 갯수가 8개는 위상차가 180도, 12개는 위상차가 120도라서 기존의 반대 다리의 포인트 계산 방식인, x좌표에 음수를 붙여주는 방식이 12legs 에선 불가능 했다. 이를 해결하기 위해 Mechanism design 책에 있는, 4bar, 6bar link 해석 알고리즘을 적용하여 하나의 2D data에 대해, 위상에 따른 새로운 2D data를 뽑는 함수를 만들어 사용 하였다 Thanks to영수 ~~! Reference","link":"/2018/01/22/V-rep-converter/"},{"title":"더듬이 로봇 (feelers robot)","text":"더듬이 로봇 동영상Development period2주Using device얀센, 리밋 스위치, 더듬이(3d 프린팅)Schematic diagram About the project 오른쪽 더듬이 터치: 2초 후진 -&gt; 2초 왼쪽 제자리 회전왼쪽 더듬이 터치 : 2초 후진 -&gt; 2초 오른쪽 제자리 회전 Algorithm123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778#define Limit_L 2 // Pin 2 connected to Limit switch out#define Limit_R 3 // Pin 3 connected to Limit switch out#define button 4#define straight=255;#define rotateH=255;#define rotateL=180;int buttonState = 0;int Lim_L = 0;int Lim_R = 0;//모드char mode ='G';void setup() &#123; pinMode(button, INPUT_PULLUP); pinMode(Limit_L,INPUT); pinMode(Limit_R,INPUT); pinMode(4, OUTPUT); // 방향 HIGH, LOW +,- pinMode(5, OUTPUT); // PWM pinMode(6, OUTPUT); // PWM pinMode(7, OUTPUT); // 방향 HIGH, LOW +,- Serial.begin(9600);&#125;void loop() &#123; // put your main code here, to run repeatedly buttonState = digitalRead(button); Lim_L = digitalRead(Limit_L);// leftstate값 확인필요!, 흰색 = 750, 검은색 = 0 Lim_R = digitalRead(Limit_R); mode_selector(); Serial.println(mode); switch(mode)&#123; case 'G': digitalWrite(4,0); //직진 analogWrite(5,255); analogWrite(6,255); digitalWrite(7,0); break; case 'L': digitalWrite(4,1); // 후진 analogWrite(5,255); analogWrite(6,255); digitalWrite(7,1); delay(2000); digitalWrite(4,0); // 좌회전 analogWrite(5,0); analogWrite(6,255); digitalWrite(7,0); delay(2000); break; case 'R':digitalWrite(4,1); // 후진 analogWrite(5,255); analogWrite(6,255); digitalWrite(7,1); delay(2000); digitalWrite(4,0); // 우회전 analogWrite(5,255); analogWrite(6,0); digitalWrite(7,0); delay(2000); break; case 'B': digitalWrite(4,1); // 후진 analogWrite(5,255); analogWrite(6,255); digitalWrite(7,1); break; &#125; delay(10);&#125;void mode_selector()&#123;if(Lim_L == 1 &amp;&amp; Lim_R == 1)&#123;mode ='G';&#125;else if(Lim_L == 0 &amp;&amp; Lim_R == 1)&#123;mode ='R';&#125;else if(Lim_L == 1 &amp;&amp; Lim_R == 0)&#123;mode ='L';&#125;else if(Lim_L == 0 &amp;&amp; Lim_R == 0)&#123;mode ='B';&#125;&#125; delay(2000); 을 통해 하나의 case 안에서 두 가지 모션 수행 1234567891011case 'L': digitalWrite(4,1); // 후진 analogWrite(5,255); analogWrite(6,255); digitalWrite(7,1); delay(2000); digitalWrite(4,0); // 좌회전 analogWrite(5,0); analogWrite(6,255); digitalWrite(7,0); delay(2000); break; Reference[1]리밋 스위치[2]더듬이 로봇","link":"/2018/01/22/더듬이-로봇-feelers-robot/"},{"title":"Obstacle avoidance with openCV","text":"Obstacle avoidance 유투브Team members김현준Development period2017.8 (1달)Using devicesjansen, arduino, raspberryPI, NoIR CameraSchematic diagram About the project 환경 셋팅 openCV 기초 공부 알고리즘 작동 Algorithm알고리즘 Thanks toReference","link":"/2018/01/23/Obstacle-avoidance-with-openCV/"},{"title":"Vrep Converter python version","text":"동영상Team members###### Development period###### Using devicesSchematic diagram About the projectAlgorithm알고리즘 Thanks toReference","link":"/2018/01/23/Vrep-Converter-python-version/"},{"title":"Vrep map generator","text":"동영상Using devicesSchematic diagram About the projectAlgorithm알고리즘 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107-- DO NOT WRITE CODE OUTSIDE OF THE if-then-end SECTIONS BELOW!! (unless the code is a function definition)function rotate_point(pt,angle) return(&#123;math.cos(angle)*pt[1]+math.sin(angle)*pt[2],-math.sin(angle)*pt[1]+math.cos(angle)*pt[2]&#125;)endfunction mat_sum(pt1,pt2) return &#123;pt1[1]+pt2[1],pt1[2]+pt2[2]&#125;endfunction check_ori(pt1,ref) if math.abs(ref[2]-pt1[2])&gt;w/4 then return &#123;0,0,90/180*math.pi&#125; else return &#123;0,0,180/180*math.pi&#125; endendfunction cppon(posi,point,name) ori=check_ori(posi,point) size_bar=&#123;0.1,w,1&#125; obj = simCreatePureShape(0,10110,size_bar,1,nil) --simSetObjectParent(obj,nil,-1) simSetObjectPosition(obj,-1,posi) simSetObjectOrientation(obj,-1,ori) simSetObjectName(obj,name) simSetObjectSpecialProperty(obj,sim_objectspecialproperty_detectable_all)endfunction cal_block_point(point,LSR,angle) if LSR==-1 then block_angle=&#123;angle+math.pi,angle+math.pi/2&#125; elseif LSR==0 then block_angle=&#123;angle-math.pi/2,angle+math.pi/2&#125; elseif LSR==1 then block_angle=&#123;angle+math.pi,angle-math.pi/2&#125; end pt_b1 = mat_sum(point,rotate_point(&#123;0,w/2&#125;,block_angle[1])) table.insert(pt_b1,0.5) pt_b2 = mat_sum(point,rotate_point(&#123;0,w/2&#125;,block_angle[2])) table.insert(pt_b2,0.5) return pt_b1,pt_b2endfunction make_block(point,LSR,dir,num) cur_dir=(dir+LSR)%4 angle=(cur_dir+1)*math.pi/2 point_next=mat_sum(point,rotate_point(&#123;0,w&#125;,angle)) table.insert(point_next,0.5) pt_b1,pt_b2=cal_block_point(point,LSR,angle) cppon(pt_b1,point,'Block_'..num..'_1') --simAddStatusbarMessage(pt_b1) --simAddStatusbarMessage(pt_b1) cppon(pt_b2,point,'Block_'..num..'_2') return point_next,cur_direndfunction mapUpdate() point,dir=make_block(posi0,0,ini_dir,1) for i=2,#map do point,dir=make_block(point,map[i],dir,i) endendif (sim_call_type==sim_childscriptcall_initialization) then w=1.2 --&#123;-1:left 0:straight 1:right&#125; map=&#123;0,0,1,-1,1,-1,0,1,1,0,-1,-1,0,1&#125; start=simGetObjectAssociatedWithScript(sim_handle_self) posi0=simGetObjectPosition(start,-1) posi0[3]=0.5 --&#123;N:0 E:1 S:2 W:3&#125; ini_dir=2 simSetObjectOrientation(start,start,&#123;0,0,math.pi/2*ini_dir&#125;) mapUpdate()endif (sim_call_type==sim_childscriptcall_actuation) then -- Put your main ACTUATION code here -- For example: -- -- local position=simGetObjectPosition(handle,-1) -- position[1]=position[1]+0.001 -- simSetObjectPosition(handle,-1,position)endif (sim_call_type==sim_childscriptcall_sensing) then -- Put your main SENSING code hereendif (sim_call_type==sim_childscriptcall_cleanup) then -- Put some restoration code hereend Thanks toReference","link":"/2018/01/23/Vrep-map-generator/"},{"title":"Vrep script modeling","text":"동영상Development period###### Using devicesSchematic diagram About the projectAlgorithm알고리즘 Thanks toReference","link":"/2018/01/23/Vrep-script-modeling/"},{"title":"Material Engineering","text":"Ready for Mechanical Engineerkeywords&amp;books1.mechanics of meterials2.Control Systems Engineering3.Machine Design4.Dynamics5.Mechanical Vibrations Tools1.auto CAD2.Solid edge","link":"/2018/10/30/Material-Engineering/"},{"title":"Overloading","text":"첫 코드 1int _tmain&#123;ar ㅁㄴㅇ","link":"/2018/10/30/Overloading/"},{"title":"Silicon Velly s01e01 -day1","text":"Studied at 2018.10.18 00:16.7 Whoo. Yeah.00:18.8 Somebody make some | motherfucking noise in here!00:25.2 Fuck these people.00:31.0 Man, this place is unbelievable.00:33.6 Fucking Goolybib, man.00:35.2 Those guys build a | mediocre piece of software,00:37.0 that might be worth something someday,00:38.9 and now they live here.00:40.7 There’s money flying | all over Silicon Valley00:42.5 but none of it ever seems to hit us.00:45.0 What the hell are you eating?00:46.7 Liquid shrimp. It’s 200 dollars a quart.00:49.2 Wylie Dufresne made it.00:51.0 How does it taste?00:53.4 Like how I would imagine cum tastes.00:55.9 You guys taking it all in?00:58.7 Because this is what it looks like when01:00.8 Google acquires your company | for over 200 million dollars.01:04.4 Look Dustin Moskovitz.01:06.9 Elon Musk. Eric Schmidt.01:09.1 Whatever the fuck the guy’s | name is who created Photrio.01:11.7 I mean, Kid Rock is the | poorest person here.01:15.2 Apart from you guys.01:16.6 Ok, there’s 40 billion dollars01:19.0 of net worth, walking around this party.01:21.2 And you guys are standing | around drinking shrimp01:23.3 and talking about what cum tastes like.01:25.3 Yeah, I heard that. You | guys live in my Incubator01:28.8 you’ve got to network. That’s | why I brought you here.01:31.6 I got us in here.01:33.3 Javeed over there is my ex-room-mate.01:35.7 Yeah, but I drove.01:38.4 Eric Schmidt, Erlich Bachman.01:42.8 It’s amazing how the men | and women at these things01:44.9 always separate like this.01:46.6 Yeah, every party in Silicon Valley | ends up like a hasidic wedding.01:50.4 Not even the Goolybib guys | were talking to girls.01:53.0 They don’t have to, Big Head.01:54.8 This house talks to girls.01:59.7 Hello! Whoo!02:02.8 I got seven words for you.02:05.9 I love Goolybib’s integrated-multi-platform-functionality!02:12.9 Yeah! Whoo!02:17.1 But seriously,02:19.3 you know, a few days ago, when we were sitting down with Barak Obama,02:23.0 I turned to these guys and said,turn to : to ask a person or organizaition for help or supportex)he felt he has no one to turn to.02:24.3 ok, you know, we’re making a lot of money.02:27.4 And yes, we’re disrupting digital media.02:30.7 But most importantly02:33.6 we’re making the world a better place.02:36.3 Through constructing elegant02:37.7 hierarchies for maximum code reuse and extensibility.02:42.4 So everyone.02:45.2 Here’s too many more nights just like this one.02:49.2 Take it away, my good friend, Kid Rock.02:53.8 What a dick. 03:07.8 Big Head, there is a personal ad section on this asperger site.03:12.0 Holy shit, this one is looking for03:13.8 a relationship that has the potential to become03:15.7 sexual in nature.”03:17.3 holly, she is on the spectrum.03:19.1 She can’t even make eye contact with the camera.03:21.6 Richard, can I talk to you for a second?03:23.3 - Solo. | - Mm-hmm.03:27.8 We need to talk about Pied Piper.03:31.4 What about it? The website’s up and running,03:34.0 I’m just redesigning the compression. It just needs users.03:36.5 Yeah, no shit.03:38.5 But even if somebody wanted to use it03:40.2 they wouldn’t be able to figure out how to. It’s incomprehensible.03:43.0 Now, Richard, when you pitched me Pied Piper you said 03:45.4 it was | gonna be, “the Google of music.”03:47.7 Which is a really rad way to pitch something.03:49.6 I mean, I liked it. I thought it had “applications”.03:52.0 No, it has all that. | Look, when it blows up,03:54.5 and it will once it reaches a critical mass of users,03:56.9 Pied Piper will be able to search the whole world03:59.1 of recorded music to find out if there’s a match to see if04:01.6 you’re infringing on any copyrighted material.04:03.6 So, if you’re a song writer or a band…04:05.2 Ok, first of all, nobody gives a shit04:06.6 about stealing other people’s music, ok?04:08.9 Everybody involved in the music industry04:10.8 is either stealing it or sharing it.04:12.2 They’re all a bunch of assholes, especially Radiohead.04:14.2 - Look, Richard… | - No.04:15.6 Yeah, they’re assholes.04:18.0 Now, look, Richard, if you want to live here,04:20.2 you’ve got to deliver. 04:21.4 I can’t have dead weight at my Incubator, ok?04:25.4 Either that, or show some promise for fuck’s sake.04:27.8 Like NipAlert, Big Head’s app.04:30.7 It gives you the location of a woman with erect nipples.04:33.4 Now, that’s something people want.04:35.1 Richard, you need to get in touch with humanity.04:37.3 When I sold my company, Aviato,04:39.5 I wanted to give back. That’s why I started this place,04:42.3 to do something big. To make a difference.04:45.0 You know, like Steve.04:46.9 Uh, Jobs or Wozniak?04:51.9 Steve Jobs or Steve…04:53.0 Oh, I heard you.04:55.3 - Which one? | - Jobs.04:57.8 I mean, Jobs was a poser. | He didn’t even write code.05:03.0 You just disappeared up your own asshole.05:06.0 - You know that? You did. | - Well, technically…05:08.8 Big Head, I’m gonna be meditating.05:10.4 He knew how to package the ideas, but it was Wozniak that…","link":"/2018/10/30/Silicon-Velly-s01e01-day1/"},{"title":"Tech","text":"","link":"/2018/10/30/Tech/"},{"title":"(c++) Copy Constructor","text":"Copy Constructor &amp; Swallow/Deep Copydef The copy constructor is called whenever an object is initialized (by direct-initialization or copy-initialization) from another object of the same type. when object initialized? initialization 123Class TT a=b;T a(b); function argument passing 12void func(T t);f(a) function argument return 12T func()return a Implicitly-declared copy constructor(Swallow Copy)If no user-defined copy constructors are provided for a class type (struct, class, or union), the compiler will always declare a copy constructor as a non-explicit inline public member of its class. This implicitly-declared copy constructor has the form Example 1) Error code123456789101112131415161718192021222324252627282930313233343536class String&#123;private: char* m_Buffer; unsigned int m_Size;public: String(const char* string) &#123; m_Size = strlen(string); m_Buffer = new char[m_Size+1]; memcpy(m_Buffer, string, m_Size); m_Buffer[m_Size] = NULL; &#125; ~String() &#123; cout &lt;&lt; &quot;소멸자&quot; &lt;&lt; endl; delete[] m_Buffer; &#125; char* GetBuffer() const &#123; return m_Buffer; &#125;&#125;;std::ostream&amp; operator&lt;&lt;(std::ostream&amp; stream, const String string) &#123; stream &lt;&lt; string.GetBuffer(); return stream;&#125;int main()&#123; String string = &quot;Cherno&quot;; cout &lt;&lt; string &lt;&lt; endl; return 0;&#125; solution 1)1std::ostream&amp; operator&lt;&lt;(std::ostream&amp; stream, const String string) const String string (매우 안좋은 코드) 입력값으로 객체를 복사 복사된 객체가 없어지면서 소멸함수에 의해 m_Buffer가 삭제된다. const String&amp; string객체를 참조함으로서 불필요한 객체의 생성을 막는다. Example 2)12345String string = &quot;Cherno&quot;;String second = string;cout &lt;&lt; string &lt;&lt; endl;cout &lt;&lt; string &lt;&lt; endl; solution 2)Reference 이것이 C++ 이다, 최호성 cppreference - copy constructors TheChernoProject","link":"/2018/10/30/cpp-Copy-Constructor/"}],"tags":[{"name":"Interactive product","slug":"Interactive-product","link":"/tags/Interactive-product/"},{"name":"raspberryPI","slug":"raspberryPI","link":"/tags/raspberryPI/"},{"name":"NoIR camera","slug":"NoIR-camera","link":"/tags/NoIR-camera/"},{"name":"Arduino","slug":"Arduino","link":"/tags/Arduino/"},{"name":"beam projector","slug":"beam-projector","link":"/tags/beam-projector/"},{"name":"resume","slug":"resume","link":"/tags/resume/"},{"name":"Mechanical Engineering","slug":"Mechanical-Engineering","link":"/tags/Mechanical-Engineering/"},{"name":"CAD","slug":"CAD","link":"/tags/CAD/"},{"name":"C","slug":"C","link":"/tags/C/"},{"name":"C++","slug":"C","link":"/tags/C/"},{"name":"Python","slug":"Python","link":"/tags/Python/"},{"name":"3D printer","slug":"3D-printer","link":"/tags/3D-printer/"},{"name":"c#","slug":"c","link":"/tags/c/"},{"name":"V rep","slug":"V-rep","link":"/tags/V-rep/"},{"name":"m.sketch","slug":"m-sketch","link":"/tags/m-sketch/"}],"categories":[{"name":"정리","slug":"정리","link":"/categories/정리/"},{"name":"Obstacle avoidance","slug":"Obstacle-avoidance","link":"/categories/Obstacle-avoidance/"},{"name":"Vrep","slug":"Vrep","link":"/categories/Vrep/"},{"name":"mech","slug":"mech","link":"/categories/mech/"},{"name":"Programming","slug":"Programming","link":"/categories/Programming/"},{"name":"English","slug":"English","link":"/categories/English/"},{"name":"Tech","slug":"Tech","link":"/categories/Tech/"},{"name":"C++","slug":"Programming/C","link":"/categories/Programming/C/"},{"name":"Silicon Velly","slug":"English/Silicon-Velly","link":"/categories/English/Silicon-Velly/"}]}